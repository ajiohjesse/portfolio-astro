---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import profile from "@/assets/images/profile-avatar.png";
import { Image } from "astro:assets";

type Props = CollectionEntry<"blog">["data"] & { id?: string };

const { title, description, publishedAt, updatedAt, heroImage, id } =
  Astro.props;
const baseUrl = Astro.url.origin;

const ogUrl = id ? `${baseUrl}/blog/${id}/og.png?url` : `${baseUrl}/og.png?url`;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: title,
  datePublished: publishedAt.toISOString(),
  dateModified: updatedAt ? updatedAt.toISOString() : publishedAt.toISOString(),
  description,
  image: ogUrl,
  url: `${Astro.url.origin}/blog/${Astro.url.pathname.replace(/^\/+/, "")}`,
  author: {
    "@type": "Person",
    name: "Jesse Ajioh",
  },
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={ogUrl} />
    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify(structuredData)}
    />
  </head>
  <body>
    <Header />
    <main class="mx-auto max-w-4xl px-6 py-12">
      <article
        class="prose prose-invert prose-lg prose-a:text-primary mx-auto [&_blockquote]:bg-card/30 [&_blockquote]:p-4 [&_blockquote]:backdrop-blur-sm [&_blockquote]:text-secondary"
      >
        {
          heroImage && (
            <div class="mb-8 w-full overflow-hidden rounded-xl">
              <img class="h-72 w-full object-cover" src={heroImage} alt="" />
            </div>
          )
        }
        <div class="text-center">
          <h1 class="mt-4 text-4xl font-bold">{title}</h1>

          <div
            class="text-muted mt-4 flex items-center gap-4 text-base font-medium"
          >
            <Image
              src={profile}
              alt="Jesse Ajioh"
              class="border-muted/20 !m-0 size-10 overflow-hidden rounded-full border object-cover object-top"
            />
            <span>By Jesse Ajioh</span>
          </div>

          <div class="text-muted mt-4 flex flex-wrap gap-4 text-base">
            <time class="!m-0 flex items-center gap-2">
              <span class="font-semibold">Published at:</span>
              <FormattedDate date={publishedAt} />
            </time>
            {
              updatedAt && (
                <time class="!m-0 flex items-center gap-2">
                  <span class="font-semibold">Updated at:</span>{" "}
                  <FormattedDate date={updatedAt} />
                </time>
              )
            }
          </div>
        </div>
        <div class="border-muted/20 mt-6 border-t pt-6">
          <slot />
        </div>
      </article>
    </main>

    <Footer />
  </body>
</html>
